{"version":3,"sources":["Components/WeatherDetails.js","Components/searchMain.js","App.js","index.js"],"names":["WeatherDetails","temp","humidity","pressure","weatherType","name","speed","country","sunset","date","Date","timestr","getHours","getMinutes","useState","weatherState","setWeatherState","useEffect","className","toLocaleString","SearchMain","searchTerm","setSearchTerm","tempInfo","setTempInfo","getWeatherInfo","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","id","onChange","e","target","value","onClick","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.2c359064.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport './style.css'\r\n\r\nfunction WeatherDetails({temp, humidity, pressure, weatherType, name, speed, country, sunset}) {\r\n    let sec=sunset;\r\n    let date = new Date(sec*1000)\r\n    let timestr= `${date.getHours()}:${date.getMinutes()}`\r\n\r\n    const [weatherState, setWeatherState] = useState(\"\")\r\n    useEffect(() => {\r\n        if (weatherType) {\r\n          switch (weatherType) {\r\n            case 'Clouds':\r\n              setWeatherState('wi-day-cloudy');\r\n              break;\r\n            case 'Haze':\r\n              setWeatherState('wi-fog');\r\n              break;\r\n            case 'Clear':\r\n              setWeatherState('wi-day-sunny');\r\n              break;\r\n            case 'Mist':\r\n              setWeatherState('wi-dust');\r\n              break;\r\n            case 'Rain':\r\n              setWeatherState('wi-day-rain');\r\n              break;\r\n            default:\r\n              setWeatherState('wi-day-sunny');\r\n              break;\r\n          }\r\n        }\r\n      }, [weatherType]);\r\n      \r\n  return (\r\n    <>\r\n        <article className='widget'>\r\n            <div className=\"weatherIcon\">\r\n                <i className={`wi ${weatherState}`}></i>\r\n            </div>\r\n            <div className=\"weatherInfo\">\r\n                <div className=\"temperature\">\r\n                    <span>{temp}Â°</span>\r\n                </div>\r\n                <div className=\"description\">\r\n                    <div className=\"weatherCondition\">\r\n                        {weatherType}\r\n                    </div>\r\n                    <div className=\"place\">{name}, {country}</div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className='date'>{new Date().toLocaleString()}</div>\r\n            <div className=\"extra-temp\">\r\n                <div className=\"temp-info-minmax\">\r\n                    <div className=\"two-sided-section\">\r\n                        <p>\r\n                            <i className={'wi wi-sunset'}></i>\r\n                        </p>\r\n                        <p className=\"extra-info-leftside\">\r\n                            {timestr} PM\r\n                            <br />\r\n                            Sunset\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"two-sided-section\">\r\n                        <p>\r\n                            <i className={'wi wi-humidity'}></i>\r\n                        </p>\r\n                        <p className=\"extra-info-leftside\">\r\n                            {humidity} <br/>\r\n                            Humidity\r\n                        </p>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                    <div className=\"two-sided-section\">\r\n                        <p>\r\n                            <i className={'wi wi-rain'}></i>\r\n                        </p>\r\n                        <p className=\"extra-info-leftside\">\r\n                            {pressure} <br/>\r\n                            Pressure\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"two-sided-section\">\r\n                        <p>\r\n                            <i className={'wi wi-strong-wind'}></i>\r\n                        </p>\r\n                        <p className=\"extra-info-leftside\">\r\n                            {speed} <br/>\r\n                            Speed\r\n                       \r\n\r\n                        </p>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                \r\n            </div>\r\n\r\n        </article>\r\n    \r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React, { useEffect } from 'react'\r\nimport './style.css'\r\nimport { useState } from 'react'\r\nimport WeatherDetails from './WeatherDetails'\r\n\r\nfunction SearchMain() {\r\n    const [searchTerm, setSearchTerm] = useState(\"mumbai\")\r\n    const [tempInfo, setTempInfo] = useState({})\r\n    const changeHandler = (e) => {\r\n        setSearchTerm(e.target.value)\r\n        //console.log(searchTerm)\r\n        \r\n    }\r\n    const getWeatherInfo = async () => {\r\n        let temp, humidity, pressure, weatherType, name, speed, country, sunset;\r\n      \r\n        try {\r\n          let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&units=metric&appid=ed2e443ec3f9d435b5c9c042977b9449`;\r\n          let res = await fetch(url);\r\n          let data = await res.json();\r\n      \r\n          temp = data.main.temp;\r\n          humidity = data.main.humidity;\r\n          pressure = data.main.pressure;\r\n          weatherType = data.weather[0].main;\r\n          name = data.name;\r\n          speed = data.wind.speed;\r\n          country = data.sys.country;\r\n          sunset = data.sys.sunset;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      \r\n        const myNewWeatherInfo = {\r\n          temp,\r\n          humidity,\r\n          pressure,\r\n          weatherType,\r\n          name,\r\n          speed,\r\n          country,\r\n          sunset,\r\n        };\r\n        setTempInfo(myNewWeatherInfo);\r\n      };\r\n      \r\n\r\n    useEffect(() => {\r\n        getWeatherInfo()\r\n    }, [])\r\n    \r\n    \r\n  \r\n\r\n  return (\r\n    <>\r\n    <div className='wrap'>\r\n        <div className=\"search\">\r\n            <input type='search' placeholder='Enter your city....' id='search'\r\n            onChange={changeHandler} className='searchInput'\r\n            />\r\n            <button className='searchButton' onClick={getWeatherInfo}>Search</button>\r\n        \r\n\r\n        </div>\r\n        \r\n      \r\n    </div>\r\n    <WeatherDetails {...tempInfo} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchMain\r\n\r\n","\nimport SearchMain from './Components/searchMain.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchMain/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}